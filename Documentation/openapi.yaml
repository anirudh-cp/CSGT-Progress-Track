openapi: 3.0.1
info:
  title: CSGT Progress Tracker
  description: |
      API for the CSGT faculty and research publication tracker. 
      Created using simplified versions of the schemas. Refer documentation for complete schemas.

      Not sure about: 
      https://stackoverflow.com/questions/6439416/status-code-when-deleting-a-resource-using-http-delete-for-the-second-time#:~:text=If%20you%20DELETE%20something%20that,in%20an%20unnecessary%20error%20condition.
  contact:
    email: anirudh.cp2020@vitstudent.ac.in
  version: 1.2.0
externalDocs:
  description: Informal Requirements
  url: https://github.com/anirudh-cp/CSGT-Progress-Track/blob/13761c305e3914dc15496721d6ade1bf0ec1aff1/Dash_SRS.pdf
servers:
  - url: http://127.0.0.1:8000/


tags:
  - name: Faculty
    description: Personal profile page for a faculty.
  - name: Publications
    description: Publications in various mediums.
  - name: Consultancy
    description: Consultancy works overseen by the faculty.
  - name: Patents
    description: The patents the faculty is involved in.
  - name: Director Actions
    description: The reporting and summarization features accessible by the director.

components:
  schemas:
    Faculty:
      required: [EmpID]
      type: object
      properties:
        EmpID:
          type: string
        Name:
          type: string
        Designation:
          type: string
    Publication:
      type: object
      properties:
        Title:
          type: integer
        Type:
          type: string
        Authors:
          type: object
          properties:
            EmpID:
              type: string
            Name:
              type: string
            Designation:
              type: string
    Consultancy:
      type: object
      properties:
        EmpID:
          type: string
        Type:
          type: string
        Name:
          type: string
    Patents:
      type: object
      properties:
        EmpID:
          type: string
        Type:
          type: string
        Name:
          type: string

paths:
  /api/faculty/{EmpID}:
    parameters:
      - name: EmpID
        in: path
        description: Employee ID
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: View personal account details.
      responses:
        "200":
          description: Faculty details returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Faculty"
        "404":
          description: Record does not exist.
      tags:
        - Faculty

    delete:
      summary: Delete given faculty details.
      responses:
        "200":
          description: Faculty details deleted successfully.
        "404":
          description: Faculty record not found hence deletion unsuccessful.
      tags:
        - Faculty

    put:
      summary: Edit/Add personal information of faculty.
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Faculty"
      responses:
        "201":
          description: Addition is successful.
        "200":
          description: Edit is successful.
        "400":
          description: Bad request.
      tags:
        - Faculty

  /api/faculty:
    get:
      summary: View all faculty account details
      responses:
        "200":
          description: Faculty details returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                        $ref: "#/components/schemas/Faculty"
        "404":
          description: No records found.
      tags:
        - Faculty


  /api/publications/{EmpID}/{Type}/{startDate}/{endDate}:
    parameters:
      - name: EmpID
        in: path
        description: Employee ID
        required: true
        schema:
          type: integer
          format: int64
      - name: Type
        in: path
        description: Type of publication to be fetched.
        required: true
        schema:
          type: string
      - name: startDate
        in: path
        description: Start date of record to be fetched.
        required: true
        schema:
          type: string         
      - name: endDate
        in: path
        description: End date of record to be fetched.
        required: true
        schema:
          type: string
    get:
      summary: Filter and View the publications for given faculty.
      description: ""
      responses:
        '200':
          description: Records returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publication"
        "404":
          description: No records found.
      tags:
        - Publications


  /api/publications/{EmpID}/{Type}:
    parameters:
      - name: EmpID
        in: path
        description: Employee ID
        required: true
        schema:
          type: integer
          format: int64
      - name: Type
        in: path
        description: Type of publication to be inserted.
        required: true
        schema:
          type: string
    put:
      summary: Edit/Add publications for given faculty.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Publication"
      responses:
        '201':
          description: Publication added successfully.
        "200":
          description: Publication edited successfully.
        "400":
          description: Bad request.
      tags:
        - Publications
  
  
  /api/publications/{Type}/{startDate}/{endDate}:
    parameters:
      - name: Type
        in: path
        description: Type of publication to be fetched.
        required: true
        schema:
          type: string
      - name: startDate
        in: path
        description: Start date of record to be fetched.
        required: true
        schema:
          type: string         
      - name: endDate
        in: path
        description: End date of record to be fetched.
        required: true
        schema:
          type: string
    get:
      summary: To generate report for all faculties.
      responses:
        '200':
          description: Records returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Publication"
        "404":
          description: No records found.
      tags:
        - Publications


  /api/consultancy/{EmpID}/{startDate}/{endDate}:
    parameters:
      - name: EmpID
        in: path
        description: Employee ID
        required: true
        schema:
          type: integer
          format: int64
      - name: startDate
        in: path
        description: Start date of record to be fetched.
        required: true
        schema:
          type: string         
      - name: endDate
        in: path
        description: End date of record to be fetched.
        required: true
        schema:
          type: string

    get:
      summary: Filter and View the consultancies for given faculty.
      description: Get all consultancies for given faculty in given time frame.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                endDate:
                  type: string
      responses:
        '200':
          description: Records returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Consultancy"
        "404":
          description: No records found.
      tags:
        - Consultancy

  /api/consultancy/{EmpID}:
    parameters:
      - name: EmpID
        in: path
        description: Employee ID
        required: true
        schema:
          type: integer
          format: int64
    put:
      summary: Edit/Add consultancies for given faculty.
      description: Insert record into consultancies.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Consultancy"
      responses:
        '201':
          description: Publication added successfully.
        "200":
          description: Publication edited successfully.
        "400":
          description: Bad request.
      tags:
        - Consultancy
  
  
  /api/consultancy/{startDate}/{endDate}:
    parameters:
      - name: startDate
        in: path
        description: Start date of record to be fetched.
        required: true
        schema:
          type: string         
      - name: endDate
        in: path
        description: End date of record to be fetched.
        required: true
        schema:
          type: string
    get:
      summary: To generate report for all faculties.
      description: Return list of all consultancies undertaken by all faculties within given time frame.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                endDate:
                  type: string
      responses:
        '200':
          description: Records returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Consultancy"
        "404":
          description: No records found.
      tags:
        - Consultancy


  /api/patent/{EmpID}/{startDate}/{endDate}:
    parameters:
      - name: EmpID
        in: path
        description: Employee ID
        required: true
        schema:
          type: integer
          format: int64
      - name: startDate
        in: path
        description: Start date of record to be fetched.
        required: true
        schema:
          type: string         
      - name: endDate
        in: path
        description: End date of record to be fetched.
        required: true
        schema:
          type: string

    get:
      summary: Filter and View the patents for given faculty.
      description: Get all patents for given faculty in given time frame.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                endDate:
                  type: string
      responses:
        '200':
          description: Records returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Patents"
        "404":
          description: No records found.
      tags:
        - Patents


  /api/patent/{EmpID}:
    parameters:
      - name: EmpID
        in: path
        description: Employee ID
        required: true
        schema:
          type: integer
          format: int64
    put:
      summary: Edit/Add patents for given faculty.
      description: Insert a record for patents.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patents"
      responses:
        '201':
          description: Publication added successfully.
        "200":
          description: Publication edited successfully.
        "400":
          description: Bad request.
      tags:
        - Patents
  
  
  /api/patent/{startDate}/{endDate}:
    parameters:
      - name: startDate
        in: path
        description: Start date of record to be fetched.
        required: true
        schema:
          type: string         
      - name: endDate
        in: path
        description: End date of record to be fetched.
        required: true
        schema:
          type: string
    get:
      summary: To generate report for all faculties.
      description: Return list of all patents undertaken by all faculties within given time frame.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                endDate:
                  type: string
      responses:
        '200':
          description: Records returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/Patents"
        "404":
          description: No records found.
      tags:
        - Patents

  /api/actions:
    post:
      summary: To generate report for all faculties.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                endDate:
                  type: string
                conference:
                  type: boolean
                journal:
                  type: boolean
                chapter:
                  type: boolean
                editor:
                  type: boolean
                patent:
                  type: boolean
                consultancy:
                  type: boolean
      responses:
        '200':
          description: Records returned successfully in PDF.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  
      tags:
        - Director Actions